# Generated by Django 4.1.3 on 2022-11-27 03:15

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminTable',
            fields=[
                ('username', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=45, unique=True)),
                ('full_name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'admin_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistTable',
            fields=[
                ('artist_id', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('artist_name', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'db_table': 'artist_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtPiece',
            fields=[
                ('art_piece_id', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('museum_inventorycol', models.CharField(max_length=45)),
                ('art_type', models.CharField(blank=True, max_length=45, null=True)),
                ('art_piece_name', models.CharField(max_length=45, unique=True)),
                ('art_origin', models.CharField(blank=True, max_length=45, null=True)),
                ('artist_name', models.CharField(blank=True, max_length=45, null=True)),
                ('date_created', models.CharField(max_length=45)),
                ('out_on_loan', models.CharField(max_length=15)),
                ('art_description', models.CharField(blank=True, max_length=45, null=True)),
                ('date_acquired', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'art_piece',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bookings',
            fields=[
                ('date_booked', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=45, null=True)),
                ('bookings_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'bookings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exhibitions',
            fields=[
                ('exhibition_id', models.IntegerField(primary_key=True, serialize=False)),
                ('curator_name', models.CharField(max_length=45)),
                ('exhibition_title', models.CharField(max_length=200)),
                ('exhibition_year', models.IntegerField()),
            ],
            options={
                'db_table': 'exhibitions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GiftShopInventory',
            fields=[
                ('item_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=45, unique=True)),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('quantity_instock', models.IntegerField(blank=True, null=True)),
                ('vendor_name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'gift_shop_inventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GiftShopTransaction',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('quantity_sold', models.IntegerField()),
                ('member_id', models.IntegerField(blank=True, null=True)),
                ('register_id', models.CharField(max_length=45)),
                ('emp_id', models.IntegerField()),
            ],
            options={
                'db_table': 'gift_shop_transaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HumanResource',
            fields=[
                ('emp_id', models.AutoField(primary_key=True, serialize=False)),
                ('emp_name', models.CharField(max_length=25)),
                ('emp_social_security', models.IntegerField(unique=True)),
                ('address', models.CharField(max_length=45)),
                ('city', models.CharField(max_length=35)),
                ('state', models.CharField(max_length=2)),
                ('zip_code', models.IntegerField()),
                ('date_of_birth', models.DateField()),
            ],
            options={
                'db_table': 'human_resource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Members',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('member_name', models.CharField(blank=True, max_length=45, null=True)),
                ('member_phone', models.CharField(blank=True, max_length=45, null=True)),
                ('member_email', models.CharField(blank=True, max_length=45, null=True)),
                ('profile_pic', models.TextField(blank=True, null=True)),
                ('date_created', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'members',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MembersExisting',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('member_full_name', models.CharField(max_length=45)),
                ('member_contact_no', models.CharField(max_length=45, unique=True)),
                ('member_email_id', models.CharField(max_length=45, unique=True)),
                ('state', models.CharField(max_length=2)),
                ('user_id', models.CharField(blank=True, max_length=45, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=45, null=True)),
                ('city', models.CharField(max_length=35)),
                ('zipcode', models.IntegerField()),
                ('street_address', models.CharField(max_length=45)),
                ('birthdate', models.DateField()),
                ('member_since', models.DateField()),
            ],
            options={
                'db_table': 'members_existing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Museum',
            fields=[
                ('museum_id', models.AutoField(primary_key=True, serialize=False)),
                ('museum_name', models.CharField(max_length=45)),
                ('art_piece_id', models.CharField(max_length=15)),
                ('emp_id', models.IntegerField()),
                ('emp_first_name', models.CharField(max_length=25)),
                ('emp_last_name', models.CharField(max_length=25)),
                ('emp_middle_initial', models.CharField(blank=True, max_length=1, null=True)),
                ('emp_date_worked', models.DateField(blank=True, null=True)),
                ('emp_shift_start', models.TimeField(blank=True, null=True)),
                ('emp_shift_end', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'museum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('ticket_type', models.CharField(blank=True, max_length=50, null=True)),
                ('ticket_price', models.CharField(max_length=45)),
                ('description', models.CharField(blank=True, max_length=55, null=True)),
            ],
            options={
                'db_table': 'ticket',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketHouse',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('ticket_type', models.CharField(max_length=15)),
                ('ticket_price', models.DecimalField(decimal_places=2, max_digits=4)),
                ('tickets_sold', models.IntegerField()),
            ],
            options={
                'db_table': 'ticket_house',
                'managed': False,
            },
        ),
    ]
